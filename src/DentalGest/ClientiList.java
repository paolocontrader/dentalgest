/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DentalGest;

import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Paolo
 */
public final  class ClientiList extends javax.swing.JFrame {
    Connection connd=null;
    Connection conna=null;
    Connection conne=null;
    Connection conn=null;
    Connection conn1=null;
    Connection conn2=null;
    Connection conn3=null;
    Connection conns=null;
        Connection connel=null;
         Connection connect = null;
         Connection connClick = null;
       Statement s = null;
    Connection coni=null;
    Connection repo=null;
    ResultSet rs=null;
    ResultSet rsc=null;
    ResultSet rscv=null;
    ResultSet rscs=null;
    PreparedStatement pstv=null;
    PreparedStatement psti=null;
    PreparedStatement pstz=null;
    PreparedStatement pstcc=null;
    PreparedStatement pst=null;
    PreparedStatement pstr=null;
    PreparedStatement psclick = null;
        Statement pstd=null;

    PreparedStatement prep=null;
    PreparedStatement pstcheck=null;
    ResultSet rss=null;
     ResultSet rscd=null;
     ResultSet rep=null;
     ResultSet rsclick = null;
    PreparedStatement psts=null;
    PreparedStatement pss = null;
    /**
     * Creates new form Clients
     */
    ClientiList() {
        initComponents();
          
       connect=Db.db();
        conn=Db.db();
         conne= Db.db();
         conna=Db.db();
         conn2= Db.db();
         conn3=Db.db();
         conn1=Db.db();
         conns=Db.db();
         coni=Db.db();
         repo=Db.db();
         connd=Db.db();
         connel=Db.db();
         connClick=Db.db();
    PopulateData();
    AnimationStation();
            
       
    }
    
//    public static boolean isMyResultSetEmpty(ResultSet rs) throws SQLException {
//         return (!rs.isBeforeFirst() && rs.getRow() == 0);
//    }
    
    public void AnimationStation() {
    MouseAdapter ma = new MouseAdapter() {
        int lastX, lastY;
   
        @Override
        public void mousePressed(MouseEvent e) {
            lastX = e.getXOnScreen();
            lastY = e.getYOnScreen();
        }
        
        @Override
        public void mouseDragged(MouseEvent e) {
            int x = e.getXOnScreen();
            int y = e.getYOnScreen();
            // Move frame by the mouse delta
            setLocation(getLocationOnScreen().x + x - lastX,
                    getLocationOnScreen().y + y - lastY);
            lastX = x;
            lastY = y;
        }
    };
    addMouseListener(ma);
    addMouseMotionListener(ma);
}
    private static ClientiList obj=null;
    
    public static ClientiList getObj(){
        if(obj==null){
            obj=new ClientiList();
        }return obj;
    }
        
    void Refresh() {
       
        int i = 0;
         int j=0; 
        String sql = "SELECT * FROM  pazienti ORDER BY nome ASC";
               

       try{
            pstd = connel.createStatement();
            rscd = pstd.executeQuery(sql);
            tb1.setModel(DbUtils.resultSetToTableModel(rscd));
           
            i =tb1.getRowCount();
          
            System.out.println("Numero righe tabella prestazioni: "+(i));
            
            if(i==0){
                JOptionPane.showMessageDialog(null, "Nessuna prestazione disponibile");
            }
            
       }
          catch(HeadlessException | SQLException e){
           JOptionPane.showMessageDialog(null, "Errore caricamento prestazioni");

                  }
    }
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bnt_agg_sek = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        bt_cerca = new javax.swing.JButton();
        app = new javax.swing.JLabel();
        txt_tt = new javax.swing.JLabel();
        txt_cerca = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bt_elim2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        bnt_mod = new javax.swing.JButton();
        bnt_agg_sek2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        lab_mail = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        lab_pec = new javax.swing.JLabel();
        txt_cognome = new javax.swing.JTextField();
        lab_codfisc = new javax.swing.JLabel();
        txt_codfisc = new javax.swing.JTextField();
        lab_formagiur = new javax.swing.JLabel();
        txtproxapp = new javax.swing.JTextField();
        lab_comune = new javax.swing.JLabel();
        lab_partiva = new javax.swing.JLabel();
        txt_totprest = new javax.swing.JTextField();
        lab_cell = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_descrinter = new javax.swing.JTextArea();
        txt_recapito = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DentalGest");
        setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bnt_agg_sek.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bnt_agg_sek.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/aggiungi.png"))); // NOI18N
        bnt_agg_sek.setAlignmentY(2.0F);
        bnt_agg_sek.setBorder(null);
        bnt_agg_sek.setBorderPainted(false);
        bnt_agg_sek.setContentAreaFilled(false);
        bnt_agg_sek.setFocusPainted(false);
        bnt_agg_sek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_agg_sekActionPerformed(evt);
            }
        });
        getContentPane().add(bnt_agg_sek, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 75, 47));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tb1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb1.setAutoscrolls(false);
        tb1.setFocusable(false);
        tb1.getTableHeader().setReorderingAllowed(false);
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 780, 240));

        bt_cerca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bt_cerca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/ricarica.png"))); // NOI18N
        bt_cerca.setBorder(null);
        bt_cerca.setBorderPainted(false);
        bt_cerca.setContentAreaFilled(false);
        bt_cerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cercaActionPerformed(evt);
            }
        });
        getContentPane().add(bt_cerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 75, 47));
        getContentPane().add(app, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        getContentPane().add(txt_tt, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 510, -1, -1));

        txt_cerca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        txt_cerca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_cercaMouseClicked(evt);
            }
        });
        getContentPane().add(txt_cerca, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 200, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Ricerca:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        bt_elim2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bt_elim2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/elimina.png"))); // NOI18N
        bt_elim2.setBorder(null);
        bt_elim2.setBorderPainted(false);
        bt_elim2.setContentAreaFilled(false);
        bt_elim2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_elim2ActionPerformed(evt);
            }
        });
        getContentPane().add(bt_elim2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, 75, 47));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/chiudi.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, -1));

        bnt_mod.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bnt_mod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/modifica.png"))); // NOI18N
        bnt_mod.setAlignmentY(2.0F);
        bnt_mod.setBorder(null);
        bnt_mod.setBorderPainted(false);
        bnt_mod.setContentAreaFilled(false);
        bnt_mod.setFocusPainted(false);
        bnt_mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_modActionPerformed(evt);
            }
        });
        getContentPane().add(bnt_mod, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 75, 47));

        bnt_agg_sek2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bnt_agg_sek2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentalgest/images/pulsanti/aggiungi.png"))); // NOI18N
        bnt_agg_sek2.setAlignmentY(2.0F);
        bnt_agg_sek2.setBorder(null);
        bnt_agg_sek2.setBorderPainted(false);
        bnt_agg_sek2.setContentAreaFilled(false);
        bnt_agg_sek2.setFocusPainted(false);
        bnt_agg_sek2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_agg_sek2ActionPerformed(evt);
            }
        });
        getContentPane().add(bnt_agg_sek2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 75, 47));

        jButton1.setText("Prestazioni");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 610, -1, -1));

        jButton2.setText("Cartella Clinica");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 610, -1, -1));

        jButton3.setText("Appuntamenti");
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 610, -1, -1));

        jButton4.setText("Pagamenti");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 610, -1, -1));

        lab_mail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_mail.setText("Nome:");
        getContentPane().add(lab_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, -1, -1));

        txt_nome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_nome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        txt_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomeActionPerformed(evt);
            }
        });
        getContentPane().add(txt_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 160, -1));

        lab_pec.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_pec.setText("Cognome:");
        getContentPane().add(lab_pec, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, -1));

        txt_cognome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_cognome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        txt_cognome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cognomeActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cognome, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 160, -1));

        lab_codfisc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_codfisc.setText("Codice Fiscale:");
        getContentPane().add(lab_codfisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, -1, -1));

        txt_codfisc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_codfisc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        getContentPane().add(txt_codfisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 160, -1));

        lab_formagiur.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_formagiur.setText("Recapito:");
        getContentPane().add(lab_formagiur, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, -1, -1));

        txtproxapp.setEditable(false);
        txtproxapp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtproxapp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        getContentPane().add(txtproxapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 140, -1));

        lab_comune.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_comune.setText("Prossimo appuntamento:");
        getContentPane().add(lab_comune, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, -1, -1));

        lab_partiva.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_partiva.setText("Totale Prestazioni:");
        getContentPane().add(lab_partiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, -1, -1));

        txt_totprest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_totprest.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        getContentPane().add(txt_totprest, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, 80, -1));

        lab_cell.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lab_cell.setText("Descrizione Intervento:");
        getContentPane().add(lab_cell, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, -1, -1));

        txt_descrinter.setColumns(20);
        txt_descrinter.setRows(5);
        jScrollPane1.setViewportView(txt_descrinter);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 780, -1));

        txt_recapito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_recapito.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        getContentPane().add(txt_recapito, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, 140, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DentalGest/images/chiudi.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DentalGest/images/minimizza.png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, -1));

        setSize(new java.awt.Dimension(848, 648));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tb1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MouseClicked
       
            try
            {
                int row = tb1.getSelectedRow();
                String tbclick =(tb1.getModel().getValueAt(row, 1).toString());
                String sql = "SELECT * FROM pazienti WHERE nome = ?";
                psclick = connClick.prepareStatement(sql);
                psclick.setString(1, tbclick);
                rsclick = psclick.executeQuery();
                if(rsclick.next())
                {
                    String add1 = rsclick.getString("nome");
                    txt_nome.setText(add1);
                    String add2 = rsclick.getString("cognome");
                    txt_cognome.setText(add2);
                    String add3 = rsclick.getString("codice_fiscale");
                    txt_codfisc.setText(add3);
                    String add4 = rsclick.getString("cell");
                    txtproxapp.setText(add4);
                    String add5 = rsclick.getString("prox_app");
                    txtproxapp.setText(add5);
                    String add6 = rsclick.getString("tot_prest");
                    txt_totprest.setText(add6);
                    String add7 = rsclick.getString("descrizione_int");
                    txt_descrinter.setText(add7);
                    
                }
                
            }
            catch(SQLException e)
            {
                e.getMessage();
            }
        
            
            
            
    }//GEN-LAST:event_tb1MouseClicked

    private void bt_cercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cercaActionPerformed
        // TODO add your handling code here:
        Search();
    }//GEN-LAST:event_bt_cercaActionPerformed

    private void bnt_agg_sekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_agg_sekActionPerformed
        // TODO add your handling code here:
         AddCliente.getObj().setVisible(true);
        AddCliente.getObj().setExtendedState( JFrame.NORMAL );
        dispose();
        
    }//GEN-LAST:event_bnt_agg_sekActionPerformed

    private void bt_elim2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_elim2ActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Si", "No"};

        int n = JOptionPane
                .showOptionDialog(null, "Sei sicuro di voler cancellare i pazienti selezionati?",
                        "Conferma cancellazione?",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, options,
                        options[1]);

        if (n == 0) // Confirm Delete = Yes
        {

            for (int i = 0; i < tb1.getRowCount(); i++) {

                Boolean chkDel = Boolean.valueOf(tb1.getValueAt(i, 0).toString()); // Checked

                if(chkDel) // Checked to Delete
                {

                    String strNome = tb1.getValueAt(i, 1)
                            .toString(); 
                    String strCognome = tb1.getValueAt(i, 2)
                            .toString(); 

                    DeleteData(strNome,strCognome); 

                }

            }

            JOptionPane.showMessageDialog(null, "Paziente/i concallati correttamente");
            txt_cognome.setText("");
                txt_codfisc.setText("");
                txt_totprest.setText("");
                txtproxapp.setText("");
                txt_nome.setText("");
                txtproxapp.setText("");
                txt_descrinter.setText("");
            PopulateData(); // Reload Table

        }

  

 

PopulateData();


    }//GEN-LAST:event_bt_elim2ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void bnt_modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_modActionPerformed
        // TODO add your handling code here:
       int x = JOptionPane.showConfirmDialog(null, "Sei sicuro di voler aggiornare l'anagrafica del seguente paziente?", "Aggiorna Anagrafica Paziente", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            try {
                String val1 = txt_nome.getText().toLowerCase();
                String val2 = txt_cognome.getText().toLowerCase();
                String val3 = txt_codfisc.getText().toLowerCase();
                String val4 = txtproxapp.getText().toLowerCase();
                String val5 = txtproxapp.getText().toLowerCase();
                String val6 = txt_totprest.getText().toLowerCase();
                String val7 = txt_descrinter.getText();

                String sql = "update pazienti set nome=?,cognome=?,codice_fiscale=?,cell=?,prox_app=?,tot_prest=?,descrizione_int=? where codice_fiscale=?";
                pst = conn.prepareStatement(sql);
                pst.setString(1, val1);
                pst.setString(2, val2);
                pst.setString(3, val3);
                pst.setString(4, val4);
                pst.setString(5, val5);
                pst.setString(6, val6);
                pst.setString(7, val7);
                pst.setString(8, val3);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Anagrafica paziente " + val1 + " " + val2 + " modificata correttamente");
                txt_nome.setText("");
                txt_cognome.setText("");
                txt_codfisc.setText("");
                txt_totprest.setText("");
                txtproxapp.setText("");
                txtproxapp.setText("");
                txt_descrinter.setText("");
                PopulateData();

            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, "Errore modifica anagrafica paziente");
            } 
        }
        PopulateData();
        
    }//GEN-LAST:event_bnt_modActionPerformed

    private void bnt_agg_sek2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_agg_sek2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bnt_agg_sek2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         Prestazioni.getObj().setVisible(true);
        Prestazioni.getObj().setExtendedState( JFrame.NORMAL );
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomeActionPerformed

    private void txt_cognomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cognomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cognomeActionPerformed

    private void txt_cercaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_cercaMouseClicked
        // TODO add your handling code here:
        if(txt_cerca.getText().equals(""))
        {
            PopulateData();
        }
    }//GEN-LAST:event_txt_cercaMouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        setExtendedState(JFrame.ICONIFIED );
    }//GEN-LAST:event_jLabel12MouseClicked

    
    public  void PopulateData() {

// Clear table
        tb1.setModel(new DefaultTableModel());
         txt_cerca.setText("");
// Model for Table
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public Class<?> getColumnClass(int column) {

                switch (column) {

                    case 0:

                        return Boolean.class;

                    case 1:

                        return String.class;

                    case 2:

                        return String.class;

                    case 3:

                        return String.class;

                    case 4:

                        return String.class;

                    case 5:

                        return String.class;

                    case 6:

                        return String.class;
                        
                    case 7:

                        return String.class;

                    default:

                        return String.class;

                }

            }

        };

        tb1.setModel(model);
        
// Add Column
        model.addColumn("Seleziona");

        model.addColumn("Nome");

        model.addColumn("Cognome");

        model.addColumn("Recapito");

        model.addColumn("Prox App.");

        model.addColumn("Descrizione");
        
      

        
    String sql = "SELECT * FROM  pazienti ORDER BY cognome ASC";
        try {

            psts = conn.prepareStatement(sql);

            

            ResultSet rec = psts.executeQuery();

            int row = 0;
            
                while ((rec != null) && (rec.next())) {
                   
                model.addRow(new Object[0]);

                model.setValueAt(false, row, 0); // Checkbox

                model.setValueAt(rec.getString("nome"), row, 1);

                model.setValueAt(rec.getString("cognome"), row, 2);

                model.setValueAt(rec.getString("cell"), row, 3);

                model.setValueAt(rec.getString("prox_app"), row, 4);
                
                model.setValueAt(rec.getString("descrizione_int"), row, 5);
                
                row++;

            }
                   System.out.println("Numero righe tabella prestazioni: "+row);
                if(row==0){
                JOptionPane.showMessageDialog(null, "Nessun paziente disponibile");
                }
            
            
           tb1.getColumnModel().getColumn(0).setPreferredWidth(20);
            tb1.getColumnModel().getColumn(1).setPreferredWidth(160);
            tb1.getColumnModel().getColumn(2).setPreferredWidth(160);
            tb1.getColumnModel().getColumn(3).setPreferredWidth(80);
            tb1.getColumnModel().getColumn(4).setPreferredWidth(80);
            tb1.getColumnModel().getColumn(5).setPreferredWidth(280);
            

        } catch (SQLException e) {

// TODO Auto-generated catch block
            JOptionPane.showMessageDialog(null, e.getMessage());


// TODO Auto-generated catch block

        }

    }

    private  void Search() {

// Clear table
        tb1.setModel(new DefaultTableModel());
         
// Model for Table
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public Class<?> getColumnClass(int column) {

                switch (column) {

                    case 0:

                        return Boolean.class;

                    case 1:

                        return String.class;

                    case 2:

                        return String.class;

                    case 3:

                        return String.class;

                    case 4:

                        return String.class;

                    case 5:

                        return String.class;

                    case 6:

                        return String.class;
                        
                    case 7:

                        return String.class;

                    default:

                        return String.class;

                }

            }

        };

        tb1.setModel(model);
        
// Add Column
        model.addColumn("Seleziona");

        model.addColumn("Nome");

        model.addColumn("Cognome");

        model.addColumn("Recapito");

        model.addColumn("Prox App.");

        model.addColumn("Descrizione");
        
      

     String cerca = txt_cerca.getText();
     if(cerca.equals(""))
     {
         PopulateData();
     }
    String sql = "SELECT * FROM  pazienti WHERE nome = ? or cognome = ? ORDER BY nome ASC";
        try {

            psts = conn.prepareStatement(sql);
            psts.setString(1, cerca);
             psts.setString(2, cerca);
            

            ResultSet rec = psts.executeQuery();

            int row = 0;
            
                while ((rec != null) && (rec.next())) {
                   
                model.addRow(new Object[0]);

                model.setValueAt(false, row, 0); // Checkbox

                model.setValueAt(rec.getString("nome"), row, 1);

                model.setValueAt(rec.getString("cognome"), row, 2);

                model.setValueAt(rec.getString("cell"), row, 3);

                model.setValueAt(rec.getString("prox_app"), row, 4);
                
                model.setValueAt(rec.getString("descrizione_int"), row, 5);
                
                row++;

            }
                   System.out.println("Numero righe tabella prestazioni: "+row);
                   if(row==0){
                   
                JOptionPane.showMessageDialog(null, "Nessun paziente disponibile");
                 PopulateData();
                }
                
            
          tb1.getColumnModel().getColumn(0).setPreferredWidth(20);
            tb1.getColumnModel().getColumn(1).setPreferredWidth(160);
            tb1.getColumnModel().getColumn(2).setPreferredWidth(160);
            tb1.getColumnModel().getColumn(3).setPreferredWidth(80);
            tb1.getColumnModel().getColumn(4).setPreferredWidth(80);
            tb1.getColumnModel().getColumn(5).setPreferredWidth(280);

        } catch (SQLException e) {

// TODO Auto-generated catch block
            JOptionPane.showMessageDialog(null, e.getMessage());
            PopulateData();


// TODO Auto-generated catch block

        }
      

    }
    
    void DeleteData(String strNome,String strCognome) {

        String sql = "DELETE FROM pazienti  WHERE nome = '" + strNome + "' AND cognome = '" + strCognome + "'";
        try {
            s = connect.createStatement();
            System.out.println("QUERY DI ELIMINAZIONE: "+strNome+" "+strCognome);
            s.execute(sql);

        } catch (SQLException e) {

            JOptionPane.showMessageDialog(null, e.getMessage());

        }

                   
        

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientiList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientiList().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel app;
    private javax.swing.JButton bnt_agg_sek;
    private javax.swing.JButton bnt_agg_sek2;
    private javax.swing.JButton bnt_mod;
    private javax.swing.JButton bt_cerca;
    private javax.swing.JButton bt_elim2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lab_cell;
    private javax.swing.JLabel lab_codfisc;
    private javax.swing.JLabel lab_comune;
    private javax.swing.JLabel lab_formagiur;
    private javax.swing.JLabel lab_mail;
    private javax.swing.JLabel lab_partiva;
    private javax.swing.JLabel lab_pec;
    private javax.swing.JTable tb1;
    private javax.swing.JTextField txt_cerca;
    private javax.swing.JTextField txt_codfisc;
    private javax.swing.JTextField txt_cognome;
    private javax.swing.JTextArea txt_descrinter;
    public javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_recapito;
    private javax.swing.JTextField txt_totprest;
    private javax.swing.JLabel txt_tt;
    private javax.swing.JTextField txtproxapp;
    // End of variables declaration//GEN-END:variables
}
